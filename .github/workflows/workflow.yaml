name: ðŸ”„ Sync Submodules Bidirectional

on:
  push:
    branches: [ main ]

env:
  GIT_AUTHOR_NAME:    "GitHub Actions Bot"
  GIT_AUTHOR_EMAIL:   "actions@github.com"
  GIT_COMMITTER_NAME: "GitHub Actions Bot"
  GIT_COMMITTER_EMAIL: "actions@github.com"
  CHILD_BRANCH:       main

jobs:
  sync:
    runs-on: ubuntu-latest
    steps:

      # 1) Checkout parent REPO c/ todos os submÃ³dulos jÃ¡ clonados
      - name: Checkout parent + submodules
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_TOKEN }}
          submodules: recursive
          fetch-depth: 0

      - name: Setup Git user
        run: |
          git config user.name  "$GIT_AUTHOR_NAME"
          git config user.email "$GIT_AUTHOR_EMAIL"

      # 2) (Opcional) captura mensagem para reaproveitar do filho â†’ parent
      - name: Get last commit message from this push
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "BASE_MSG<<EOF" >> $GITHUB_ENV
          git log -1 --pretty=%B
          echo "EOF"       >> $GITHUB_ENV

      # 3) Push de volta para cada submodule que tenha sido modificado NO PAI
      - name: Push parentsâ€™ changes back into each child repo
        run: |
          # Para cada submÃ³dulo que sofreu alteraÃ§Ã£o de conteÃºdoâ€¦
          git submodule foreach --quiet '
            # $path = caminho relativo; $toplevel Ã© o root do pai
            if [[ -n "$(git status --porcelain)" ]]; then
              echo "â†’ Submodule $name has local changes, pushing back to child repo"
              # garante estar na branch main
              git checkout $CHILD_BRANCH
              # commit local
              git add .
              git diff --cached --quiet || \
                git commit -m "ðŸ”„ Sync from parent repo (${GITHUB_REPOSITORY}@${GITHUB_SHA:0:7})"
              # empurra para o remoto original do submÃ³dulo
              git push origin HEAD:$CHILD_BRANCH
            else
              echo "â†’ Submodule $name no changes, skipping"
            fi
          '

      # 4) Atualiza os ponteiros de submÃ³dulo no parent e commita caso haja mudanÃ§a
      - name: Update submodule pointers & push parent
        run: |
          git submodule update --remote --merge
          git add .
          git diff --cached --quiet || (
            git commit -m "ðŸ”„ Update submodule refs after child-sync"
            git push origin main
          )
